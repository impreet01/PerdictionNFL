openapi: 3.1.1
info:
  title: NFL Predictions Worker API
  version: "2.0.0"
  description: >
    Cloudflare Worker that serves NFL prediction artifacts, model diagnostics,
    context packs, and historical lookups directly from the repository's
    `artifacts/` folder. Every endpoint is read-only and returns JSON.

servers:
  - url: https://YOUR_WORKER_BASE_URL

paths:
  /:
    get:
      operationId: getRoot
      summary: Worker health probe
      responses:
        "200":
          description: Worker is responding
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  message:
                    type: string

  /health:
    get:
      operationId: getHealth
      summary: Show available prediction/model artifacts for a season
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Health payload describing latest week and available files
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  latest_week:
                    type: integer
                    nullable: true
                  weeks:
                    type: array
                    items:
                      type: object
                      properties:
                        week:
                          type: integer
                        predictions_file:
                          type: string
                        model_file:
                          type: string
                          nullable: true
                        injuries_file:
                          type: string
                          nullable: true
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Season not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /status:
    get:
      operationId: getStatus
      summary: Alias of /health for uptime probes
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Same payload as /health
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  latest_week:
                    type: integer
                    nullable: true
                  weeks:
                    type: array
                    items:
                      type: object
                      properties:
                        week:
                          type: integer
                        predictions_file:
                          type: string
                        model_file:
                          type: string
                          nullable: true
                        injuries_file:
                          type: string
                          nullable: true
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Season not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /weeks:
    get:
      operationId: listWeeks
      summary: List prediction weeks available for a season
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Season week listing
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  latest_week:
                    type: integer
                    nullable: true
                  weeks:
                    type: array
                    items:
                      type: integer
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Season not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /season/index:
    get:
      operationId: getSeasonIndex
      summary: Retrieve the compiled artifact index for a season
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Season index JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  data:
                    $ref: "#/components/schemas/SeasonIndex"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Index not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /season/summary:
    get:
      operationId: getSeasonSummary
      summary: Retrieve the season summary artifact
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Season summary JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  data:
                    $ref: "#/components/schemas/SeasonSummary"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Summary not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /predictions:
    get:
      operationId: getPredictions
      summary: Get predictions for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: Prediction payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PredictionGame"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Predictions not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /predictions/current:
    get:
      operationId: getCurrentPredictions
      summary: Get predictions for the newest available season/week
      responses:
        "200":
          description: Latest prediction payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/PredictionGame"
        "404":
          description: No predictions available yet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /context:
    get:
      operationId: getContext
      summary: Get context pack for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
        - in: query
          name: team
          description: >
            Optional team abbreviation to filter the response to games where the
            team appears (home or away). When omitted all teams are eligible.
          schema:
            type: string
            example: KC
        - in: query
          name: game_id
          description: >
            Optional specific game identifier (e.g. `2025-W06-KC-BUF`). When
            provided the response only contains that game's context payload.
          schema:
            type: string
        - in: query
          name: chunk
          description: >
            1-indexed chunk number to return when the data is paginated.
          schema:
            type: integer
            minimum: 1
        - in: query
          name: chunk_size
          description: >
            Maximum number of game records to include in the response chunk.
            Values above the server limit are clamped.
          schema:
            type: integer
      responses:
        "200":
          description: Context payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  filters:
                    type: object
                    additionalProperties: false
                    properties:
                      team:
                        type: string
                      game_id:
                        type: string
                  data:
                    $ref: "#/components/schemas/ContextPayload"
                  pagination:
                    $ref: "#/components/schemas/ChunkPagination"
                  available_games:
                    type: array
                    description: Listing of games available for the selected week.
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        game_id:
                          type: string
                          nullable: true
                        home_team:
                          type: string
                          nullable: true
                        away_team:
                          type: string
                          nullable: true
                  available_teams:
                    type: array
                    items:
                      type: string
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Context not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /context/current:
    get:
      operationId: getCurrentContext
      summary: Get the context payload built through the latest week
      responses:
        "200":
          description: Context current payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                    nullable: true
                  built_through_week:
                    type: integer
                    nullable: true
                  data:
                    $ref: "#/components/schemas/ContextPayload"
        "404":
          description: Context not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /injuries:
    get:
      operationId: getInjuries
      summary: Get injury reports for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
        - in: query
          name: team
          description: >
            Optional comma-separated list of team abbreviations (e.g. `BUF,KC`) to
            filter the response. When omitted all teams are returned.
          schema:
            type: string
        - in: query
          name: status
          description: >
            Optional comma-separated list of injury statuses (e.g. `OUT,QUESTIONABLE`)
            to filter the response.
          schema:
            type: string
        - in: query
          name: limit
          description: >
            Optional maximum number of records to return after filtering. Must be a
            positive integer.
          schema:
            type: integer
        - in: query
          name: chunk
          description: >
            1-indexed chunk number to return when paginating the filtered
            injuries list.
          schema:
            type: integer
            minimum: 1
        - in: query
          name: chunk_size
          description: >
            Maximum number of injury records to include in the returned chunk.
            Values above the server limit are clamped.
          schema:
            type: integer
      responses:
        "200":
          description: Injury report payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  filters:
                    type: object
                    additionalProperties: false
                    properties:
                      teams:
                        type: array
                        items:
                          type: string
                      statuses:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/InjuryEntry"
                  pagination:
                    $ref: "#/components/schemas/ChunkPagination"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Injury artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /injuries/current:
    get:
      operationId: getCurrentInjuries
      summary: Get the latest available injury report
      parameters:
        - in: query
          name: team
          description: Optional comma-separated team filter.
          schema:
            type: string
        - in: query
          name: status
          description: Optional comma-separated status filter.
          schema:
            type: string
        - in: query
          name: limit
          description: Optional maximum number of records to return.
          schema:
            type: integer
      responses:
        "200":
          description: Latest injury report payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                    nullable: true
                  filters:
                    type: object
                    additionalProperties: false
                    properties:
                      teams:
                        type: array
                        items:
                          type: string
                      statuses:
                        type: array
                        items:
                          type: string
                      limit:
                        type: integer
                  week:
                    type: integer
                    nullable: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/InjuryEntry"
        "404":
          description: Injury artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /weather:
    get:
      operationId: getWeather
      summary: Get weather outlook for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 6
      responses:
        "200":
          description: Weather payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/WeatherEntry"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Weather artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /weather/current:
    get:
      operationId: getCurrentWeather
      summary: Get the latest weather outlook
      responses:
        "200":
          description: Latest weather payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                    nullable: true
                  week:
                    type: integer
                    nullable: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/WeatherEntry"
        "404":
          description: Weather artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /explain:
    get:
      operationId: getExplain
      summary: Get explainability rubric for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: Explain scorecard payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ExplainPayload"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Explain artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /models:
    get:
      operationId: getModels
      summary: Get model internals for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: Model payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ModelPayload"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Model artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /diagnostics:
    get:
      operationId: getDiagnostics
      summary: Get diagnostics for a season/week (defaults to latest)
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: Diagnostics payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    $ref: "#/components/schemas/DiagnosticsPayload"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Diagnostics artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /outcomes:
    get:
      operationId: getOutcomes
      summary: Get joined predictions and actual results for a season/week
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: Outcomes payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OutcomeGame"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Outcomes artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /metrics/week:
    get:
      operationId: getWeekMetrics
      summary: Get per-model metrics for a season/week
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: week
          schema:
            type: integer
            example: 5
      responses:
        "200":
          description: Weekly metrics payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  week:
                    type: integer
                  data:
                    $ref: "#/components/schemas/WeekMetrics"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Metrics artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /metrics/season:
    get:
      operationId: getSeasonMetrics
      summary: Get cumulative metrics for a season
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Season metrics payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  data:
                    $ref: "#/components/schemas/SeasonMetrics"
        "400":
          description: Invalid query parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Metrics artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /leaderboard:
    get:
      operationId: getLeaderboard
      summary: Rank models by an evaluation metric for the season
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: metric
          schema:
            type: string
            enum: [accuracy, auc, logloss, brier]
            default: accuracy
      responses:
        "200":
          description: Leaderboard payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  season:
                    type: integer
                  metric:
                    type: string
                  leaderboard:
                    type: array
                    items:
                      $ref: "#/components/schemas/LeaderboardEntry"
        "400":
          description: Invalid parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Metrics artifact missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /history/team:
    get:
      operationId: getTeamHistory
      summary: List predictions for a team across available weeks
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: team
          required: true
          schema:
            type: string
            example: BUF
      responses:
        "200":
          description: Team history payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  team:
                    type: string
                  season:
                    type: integer
                    nullable: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/HistoryEntry"
        "400":
          description: Missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No predictions available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /history/game:
    get:
      operationId: getMatchupHistory
      summary: List predictions for a specific home/away matchup
      parameters:
        - in: query
          name: season
          schema:
            type: integer
            example: 2025
        - in: query
          name: home
          required: true
          schema:
            type: string
            example: KC
        - in: query
          name: away
          required: true
          schema:
            type: string
            example: BUF
      responses:
        "200":
          description: Matchup history payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  home:
                    type: string
                  away:
                    type: string
                  season:
                    type: integer
                    nullable: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/HistoryEntry"
        "400":
          description: Missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: No predictions available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /artifact:
    get:
      operationId: getArtifact
      summary: Fetch a raw artifact by filename (within artifacts/)
      parameters:
        - in: query
          name: path
          required: true
          schema:
            type: string
            example: predictions_2025_W05.json
      responses:
        "200":
          description: Raw artifact content (object or array)
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties: {}
                    additionalProperties: true
                  - type: array
                    items: {}
        "400":
          description: Invalid path
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Artifact not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string

    PredictionGame:
      type: object
      properties:
        game_id:
          type: string
          example: 2025-W05-LA-SF
        home_team:
          type: string
          example: LA
        away_team:
          type: string
          example: SF
        season:
          type: integer
          example: 2025
        week:
          type: integer
          example: 5
        forecast:
          type: number
          format: float
          description: Ensemble win probability for the home team
        probs:
          $ref: "#/components/schemas/ProbabilityBreakdown"
        blend_weights:
          $ref: "#/components/schemas/BlendWeights"
        calibration:
          $ref: "#/components/schemas/CalibrationAdjustment"
        ci:
          type: object
          nullable: true
          description: Optional confidence interval data keyed by method
          additionalProperties:
            type: array
            items:
              type: number
        top_drivers:
          type: array
          items:
            $ref: "#/components/schemas/DriverAttribution"
        natural_language:
          type: string
        actual:
          $ref: "#/components/schemas/GameOutcome"
          nullable: true

    ProbabilityBreakdown:
      type: object
      properties:
        logistic:
          type: number
        tree:
          type: number
        bt:
          type: number
          nullable: true
        ann:
          type: number
          nullable: true
        blended:
          type: number
      additionalProperties:
        type: number

    BlendWeights:
      type: object
      properties:
        logistic:
          type: number
        tree:
          type: number
        bt:
          type: number
          nullable: true
        ann:
          type: number
          nullable: true
      additionalProperties:
        type: number

    CalibrationAdjustment:
      type: object
      nullable: true
      properties:
        pre:
          type: number
          nullable: true
        post:
          type: number
          nullable: true
      additionalProperties:
        type: number

    DriverAttribution:
      type: object
      properties:
        feature:
          type: string
        direction:
          type: string
        magnitude:
          type: number
        source:
          type: string

    GameOutcome:
      type: object
      properties:
        home_points:
          type: integer
        away_points:
          type: integer
        home_win:
          type: integer
          enum: [0, 1]

    DiagnosticsPayload:
      type: object
      properties:
        auc:
          type: number
        logloss:
          type: number
        brier:
          type: number
        calibration_bins:
          type: array
          items:
            $ref: "#/components/schemas/CalibrationBin"
        blend_weights:
          $ref: "#/components/schemas/BlendWeights"
          nullable: true
        n_train_rows:
          type: integer
          nullable: true
        weeks_seen:
          type: integer
          nullable: true
      additionalProperties: true

    CalibrationBin:
      type: object
      properties:
        bin:
          type: integer
        p_mean:
          type: number
        y_rate:
          type: number
        n:
          type: integer

    OutcomeGame:
      type: object
      properties:
        game_id:
          type: string
        home_team:
          type: string
        away_team:
          type: string
        season:
          type: integer
        week:
          type: integer
        actual:
          $ref: "#/components/schemas/GameOutcome"
        predicted:
          $ref: "#/components/schemas/ProbabilityBreakdown"

    InjuryEntry:
      type: object
      properties:
        team:
          type: string
          example: BUF
        season:
          type: integer
          example: 2025
        week:
          type: integer
          example: 5
        player:
          type: string
          example: Josh Allen
        position:
          type: string
          example: QB
        status:
          type: string
          example: Questionable
        injury:
          type: string
          example: Shoulder
        practice:
          type: string
          nullable: true
          example: "LP"
        notes:
          type: string
          nullable: true
          example: Limited participant in Friday's practice
        fetched_at:
          type: string
          format: date-time
          nullable: true
        source:
          type: string
          example: rotowire
      additionalProperties: true

    MetricsLine:
      type: object
      properties:
        logloss:
          type: number
        brier:
          type: number
        auc:
          type: number
        accuracy:
          type: number
        n:
          type: integer

    WeekMetrics:
      type: object
      properties:
        season:
          type: integer
        week:
          type: integer
        per_model:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MetricsLine"

    SeasonMetrics:
      type: object
      properties:
        season:
          type: integer
        latest_completed_week:
          type: integer
        cumulative:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/MetricsLine"
        by_week:
          type: array
          nullable: true
          items:
            type: object
            properties:
              week:
                type: integer
              metrics:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/MetricsLine"
            required: [week, metrics]
      additionalProperties: true

    ContextPayload:
      type: array
      description: Aggregated injuries, depth charts, usage, venue, market, and weather context
      items:
        $ref: "#/components/schemas/ContextGame"

    ContextGame:
      type: object
      properties:
        game_id:
          type: string
        season:
          type: integer
        week:
          type: integer
        home_team:
          type: string
        away_team:
          type: string
        context:
          $ref: "#/components/schemas/ContextDetails"
      required: [game_id, season, week, home_team, away_team, context]

    ContextDetails:
      type: object
      properties:
        injuries:
          $ref: "#/components/schemas/ContextInjuries"
        qb_form:
          $ref: "#/components/schemas/ContextQBForm"
        rolling_strength:
          $ref: "#/components/schemas/ContextRollingStrength"
        venue:
          $ref: "#/components/schemas/ContextVenue"
        weather:
          $ref: "#/components/schemas/ContextWeather"
        elo:
          type: number
          nullable: true
        market:
          type: number
          nullable: true
      additionalProperties: true

    ContextInjuries:
      type: object
      properties:
        home_out:
          type: array
          items:
            type: string
        away_out:
          type: array
          items:
            type: string
        home_probable:
          type: array
          items:
            type: string
        away_probable:
          type: array
          items:
            type: string
      additionalProperties: true

    ContextQBForm:
      type: object
      properties:
        home:
          $ref: "#/components/schemas/QBFormMetrics"
        away:
          $ref: "#/components/schemas/QBFormMetrics"
      additionalProperties: true

    QBFormMetrics:
      type: object
      properties:
        ypa_3g:
          type: number
          nullable: true
        sack_rate_3g:
          type: number
          nullable: true
        qbr:
          type: number
          nullable: true
      additionalProperties: true

    ChunkPagination:
      type: object
      description: Metadata describing the current chunk of a paginated response.
      properties:
        chunk:
          type: integer
        chunk_size:
          type: integer
        total_items:
          type: integer
        total_chunks:
          type: integer
        has_next:
          type: boolean
        has_previous:
          type: boolean
        next_chunk:
          type: integer
          nullable: true
        previous_chunk:
          type: integer
          nullable: true
      required:
        - chunk
        - chunk_size
        - total_items
        - total_chunks
        - has_next
        - has_previous

    ContextRollingStrength:
      type: object
      properties:
        home:
          $ref: "#/components/schemas/RollingStrengthMetrics"
        away:
          $ref: "#/components/schemas/RollingStrengthMetrics"
      additionalProperties: true

    RollingStrengthMetrics:
      type: object
      properties:
        yds_for_3g:
          type: number
          nullable: true
        yds_against_3g:
          type: number
          nullable: true
        net_yds_3g:
          type: number
          nullable: true
      additionalProperties: true

    ContextVenue:
      type: object
      properties:
        is_dome:
          type: boolean
        is_outdoor:
          type: boolean
        surface:
          type: string
      additionalProperties: true

    ContextWeather:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        temperature_f:
          type: number
          nullable: true
        precipitation_chance:
          type: number
          nullable: true
          description: Percentage chance of precipitation (0-100)
        wind_mph:
          type: number
          nullable: true
        impact_score:
          type: number
          nullable: true
          description: Heuristic 0-1 severity score derived from weather notes
        kickoff_display:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        forecast_provider:
          type: string
          nullable: true
        forecast_links:
          type: array
          items:
            $ref: "#/components/schemas/ContextWeatherLink"
        icon:
          type: string
          nullable: true
          description: URL pointing to the forecast icon
        fetched_at:
          type: string
          format: date-time
          nullable: true
        is_dome:
          type: boolean
          nullable: true
      additionalProperties: true

    ContextWeatherLink:
      type: object
      properties:
        label:
          type: string
          nullable: true
        url:
          type: string
          format: uri
      required: [url]

    WeatherEntry:
      type: object
      properties:
        season:
          type: integer
        week:
          type: integer
        home_team:
          type: string
        away_team:
          type: string
        home_name:
          type: string
          nullable: true
        away_name:
          type: string
          nullable: true
        game_key:
          type: string
          nullable: true
        kickoff_display:
          type: string
          nullable: true
        temperature_f:
          type: number
          nullable: true
        feels_like_f:
          type: number
          nullable: true
        wind_mph:
          type: number
          nullable: true
        precipitation_chance:
          type: number
          nullable: true
        conditions:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
      additionalProperties: true

    ExplainPayload:
      type: object
      description: Explainability rubric and scorecard inputs
      properties:
        season:
          type: integer
        week:
          type: integer
        rubric_version:
          type: string
        thresholds:
          type: object
          additionalProperties:
            type: number
        weights:
          type: object
          additionalProperties:
            type: number
        games:
          type: array
          items:
            $ref: "#/components/schemas/ExplainGame"
      required: [season, week, rubric_version, thresholds, weights, games]
      additionalProperties: true

    ExplainGame:
      type: object
      properties:
        game_id:
          type: string
        home_team:
          type: string
        away_team:
          type: string
        pick:
          type: string
          nullable: true
        blended:
          type: number
          nullable: true
        support_score:
          type: number
          nullable: true
        factors:
          type: array
          items:
            $ref: "#/components/schemas/ExplainFactor"
      additionalProperties: true

    ExplainFactor:
      type: object
      properties:
        name:
          type: string
        vote:
          type: number
        weight:
          type: number
        reason:
          type: string
      additionalProperties: true

    ModelPayload:
      type: object
      description: Serialized ensemble parameters and scalers
      properties:
        season:
          type: integer
        week:
          type: integer
        generated_at:
          type: string
          format: date-time
        logistic:
          $ref: "#/components/schemas/LogisticModel"
        bt:
          $ref: "#/components/schemas/BradleyTerryModel"
        decision_tree:
          $ref: "#/components/schemas/DecisionTreeModel"
        ann:
          $ref: "#/components/schemas/AnnModel"
        ensemble:
          $ref: "#/components/schemas/EnsembleModel"
        feature_enrichment:
          $ref: "#/components/schemas/FeatureEnrichment"
        pca:
          type: array
          items:
            $ref: "#/components/schemas/PCAComponent"
      additionalProperties: true

    LogisticModel:
      type: object
      properties:
        features:
          type: array
          items:
            type: string
        weights:
          type: array
          items:
            type: number
        bias:
          type: number
          nullable: true
        scaler:
          $ref: "#/components/schemas/ScalerParameters"
      additionalProperties: true

    BradleyTerryModel:
      type: object
      properties:
        features:
          type: array
          items:
            type: string
        coefficients:
          type: array
          items:
            type: number
        intercept:
          type: number
          nullable: true
        scaler:
          $ref: "#/components/schemas/ScalerParameters"
      additionalProperties: true

    DecisionTreeModel:
      type: object
      properties:
        alpha:
          type: number
          nullable: true
        params:
          type: object
          additionalProperties: true
      additionalProperties: true

    AnnModel:
      type: object
      properties:
        architecture:
          type: array
          items:
            type: integer
        committee_size:
          type: integer
        seeds:
          type: array
          items:
            type: integer
      additionalProperties: true

    EnsembleModel:
      type: object
      properties:
        weights:
          type: object
          additionalProperties:
            type: number
        calibration_beta:
          type: number
          nullable: true
      additionalProperties: true

    FeatureEnrichment:
      type: object
      properties:
        appended_features:
          type: array
          items:
            type: string
        pbp_rows:
          type: integer
          nullable: true
        player_weekly_rows:
          type: integer
          nullable: true
      additionalProperties: true

    PCAComponent:
      type: object
      properties:
        component:
          type: integer
        explained_variance:
          type: number
        top_loadings:
          type: array
          items:
            $ref: "#/components/schemas/PCALoading"
      additionalProperties: true

    PCALoading:
      type: object
      properties:
        feature:
          type: string
        loading:
          type: number
      additionalProperties: true

    ScalerParameters:
      type: object
      properties:
        mu:
          type: array
          items:
            type: number
        sigma:
          type: array
          items:
            type: number
      additionalProperties: true

    SeasonIndex:
      type: object
      properties:
        season:
          type: integer
        latest_completed_week:
          type: integer
        weeks:
          type: array
          items:
            type: object
            properties:
              week:
                type: integer
              status:
                type: string
              predictions:
                type: object
                additionalProperties: true
              outcomes:
                type: object
                additionalProperties: true
            additionalProperties: true
      additionalProperties: true

    SeasonSummary:
      type: object
      properties:
        season:
          type: integer
        latest_completed_week:
          type: integer
        completed_weeks:
          type: integer
        total_games:
          type: integer
        season_metrics:
          $ref: "#/components/schemas/SeasonMetrics"
      additionalProperties: true

    HistoryEntry:
      type: object
      properties:
        season:
          type: integer
        week:
          type: integer
        game_id:
          type: string
        home_team:
          type: string
        away_team:
          type: string
        forecast:
          type: number
          nullable: true
        probs:
          $ref: "#/components/schemas/ProbabilityBreakdown"
          nullable: true
        blend_weights:
          $ref: "#/components/schemas/BlendWeights"
          nullable: true
        calibration:
          $ref: "#/components/schemas/CalibrationAdjustment"
          nullable: true
        top_drivers:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/DriverAttribution"
        natural_language:
          type: string
          nullable: true
        actual:
          $ref: "#/components/schemas/GameOutcome"
          nullable: true

    LeaderboardEntry:
      type: object
      properties:
        model:
          type: string
        value:
          type: number
